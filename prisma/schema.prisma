// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  product_id        Int                @id @default(autoincrement())
  product_name      String
  product_image_url String
  product_price     Float
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  type_id           Int
  Products_price    Products_price[]
  Products_gender   Products_gender[]
  Product_type      Product_type       @relation(fields: [type_id], references: [type_id])
  Product_plataform  Product_plataform[]
}

model Products_price {
  product_price_id Int                @id @default(autoincrement())
  product_price    Float
  createdAt        DateTime           @default(now())
  product_url      String
  product_isActive Boolean            @default(true)
  country_id       Int
  product_id       Int
  timeframe_id     Int
  country          Country            @relation(fields: [country_id], references: [country_id])
  Product          Products           @relation(fields: [product_id], references: [product_id])
  timeframe        Products_timeframe @relation(fields: [timeframe_id], references: [timeframe_id])
}

model Products_timeframe {
  timeframe_id          Int              @id @default(autoincrement())
  timeframe_description String
  products_price        Products_price[]
}

model Gender {
  gender_id           Int               @id @default(autoincrement())
  gender_name         String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  gender_isActive     Boolean           @default(true)
  type_id             Int
  Product_type        Product_type      @relation(fields: [type_id], references: [type_id])
  Products_categories Products_gender[]
}

model Products_gender {
  products_categories_id Int      @id @default(autoincrement())
  product_id             Int
  gender_id              Int
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  Product                Products @relation(fields: [product_id], references: [product_id])
  Gender                 Gender   @relation(fields: [gender_id], references: [gender_id])
}

model Country {
  country_id     Int              @id @default(autoincrement())
  country_name   String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Products_price Products_price[]
}

model Product_type {
  type_id                Int                      @id @default(autoincrement())
  type_description       String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  Products               Products[]
  Gender                 Gender[]
  Product_type_plataform Product_type_plataform[]
}

model Product_type_plataform {
  product_type_plataform Int          @id @default(autoincrement())
  product_type_id        Int
  plataform_id           Int
  createdAt              DateTime     @default(now())
  updatedAt              DateTime     @updatedAt
  Product_type           Product_type @relation(fields: [product_type_id], references: [type_id])
  Plataform              Plataform    @relation(fields: [plataform_id], references: [plataform_id])
}

model Plataform {
  plataform_id           Int                      @id @default(autoincrement())
  plataform_description  String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  Product_type_plataform Product_type_plataform[]
  Product_plataform       Product_plataform[]
}

model Product_plataform {
  product_plataform_id Int       @id @default(autoincrement())
  product_id           Int
  plataform_id         Int
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  Product              Products  @relation(fields: [product_id], references: [product_id])
  Plataform            Plataform @relation(fields: [plataform_id], references: [plataform_id])
}
